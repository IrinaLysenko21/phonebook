{"version":3,"sources":["transitions/slide.module.css","components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","transitions/pop.module.css","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/App.js","services/localStorage.js","index.js","components/ContactForm/ContactForm.module.css","components/App.module.css"],"names":["module","exports","Contact","name","number","handleDeleteContact","className","styles","contactWrap","contactInfo","deleteBtn","type","onClick","xmlns","width","height","fill","d","row","ContactList","contacts","TransitionGroup","component","contactList","map","contact","CSSTransition","key","id","timeout","unmountOnExit","classNames","slideTransition","Filter","value","handleChangeFilter","search","onChange","placeholder","ContactForm","state","inputIds","nameId","shortid","generate","numberId","handleChange","e","target","setState","handleSubmit","preventDefault","handleAddContact","props","resetForm","this","contactForm","onSubmit","input","submitBtn","Component","notyf","Notyf","App","filter","addContact","newContact","trim","error","match","findMatchingContact","prevState","success","deleteContact","changeFilter","filterContacts","query","toLowerCase","includes","find","persistedContacts","localStorage","getItem","undefined","JSON","parse","err","Error","prevProps","contactsToSave","stringify","setItem","filteredContacts","wrapper","heading","length","defaultText","in","popTransition","ReactDOM","render","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa,4B,kBCAhID,EAAOC,QAAU,CAAC,UAAY,+BAA+B,kBAAkB,UAAU,qBAAqB,0BAA0B,YAAc,6BAA6B,YAAc,6BAA6B,KAAO,sBAAsB,OAAS,wBAAwB,UAAY,2BAA2B,IAAM,uB,mBCAzUD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,kBAAkB,UAAU,mBAAmB,UAAU,OAAS,yB,mBCA/HD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,YAAc,yBAAyB,KAAO,kBAAkB,WAAa,0B,wNCkC3GC,EA/BC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,oBAAjB,OACd,oCACE,yBAAKC,UAAWC,IAAOC,aACrB,yBAAKF,UAAWC,IAAOE,aACrB,0BAAMH,UAAWC,IAAOJ,MAAOA,GAC/B,0BAAMG,UAAWC,IAAOH,QAASA,IAEnC,4BACEE,UAAWC,IAAOG,UAClBC,KAAK,SACLC,QAASP,GAET,yBAAKQ,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,MACxD,0BAAMC,KAAK,OAAOC,EAAE,oBACpB,0BACED,KAAK,OACLC,EAAE,qGAKV,yBAAKX,UAAWC,IAAOW,Q,kCCcZC,EAhCK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUf,EAAb,EAAaA,oBAAb,OAClB,kBAACgB,EAAA,EAAD,CAAiBC,UAAU,KAAKhB,UAAWC,IAAOgB,aAC/CH,EAASI,KAAI,SAAAC,GAAO,OACnB,kBAACC,EAAA,EAAD,CACEC,IAAKF,EAAQG,GACbC,QAAS,IACTC,eAAa,EACbC,WAAYC,KAEZ,4BACE,kBAAC,EAAD,CACE7B,KAAMsB,EAAQtB,KACdC,OAAQqB,EAAQrB,OAChBC,oBAAqB,kBAAMA,EAAoBoB,EAAQG,c,iBCCpDK,EAjBA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACvB,OACE,2BACE7B,UAAWC,IAAO6B,OAClBzB,KAAK,OACLuB,MAAOA,EACPG,SAAUF,EACVG,YAAY,qB,wBC+DHC,E,2MAhEbC,MAAQ,CACNrC,KAAM,GACNC,OAAQ,I,EAGVqC,SAAW,CACTC,OAAQC,IAAQC,WAChBC,SAAUF,IAAQC,Y,EAGpBE,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,OAAlB7C,EADU,EACVA,KAAM+B,EADI,EACJA,MACd,EAAKe,SAAL,eAAiB9C,EAAO+B,K,EAG1BgB,aAAe,SAAAH,GACbA,EAAEI,iBADgB,MAGO,EAAKX,MAAtBrC,EAHU,EAGVA,KAAMC,EAHI,EAGJA,QAEdgD,EAD6B,EAAKC,MAA1BD,kBACSjD,EAAMC,GAEvB,EAAKkD,a,EAGPA,UAAY,WACV,EAAKL,SAAS,CACZ9C,KAAM,GACNC,OAAQ,M,wEAIF,IAAD,EACkBmD,KAAKf,MAAtBrC,EADD,EACCA,KAAMC,EADP,EACOA,OADP,EAEsBmD,KAAKd,SAA1BC,EAFD,EAECA,OAAQG,EAFT,EAESA,SAEhB,OACE,0BAAMvC,UAAWC,IAAOiD,YAAaC,SAAUF,KAAKL,cAClD,2BACEtB,GAAIc,EACJpC,UAAWC,IAAOmD,MAClB/C,KAAK,OACLR,KAAK,OACLmC,YAAY,gBACZJ,MAAO/B,EACPkC,SAAUkB,KAAKT,eAEjB,2BACElB,GAAIiB,EACJvC,UAAWC,IAAOmD,MAClB/C,KAAK,OACLR,KAAK,SACLmC,YAAY,wBACZJ,MAAO9B,EACPiC,SAAUkB,KAAKT,eAEjB,4BAAQnC,KAAK,SAASL,UAAWC,IAAOoD,WAAxC,qB,GA7DkBC,a,iCCSpBC,G,MAAQ,IAAIC,KAkHHC,E,2MA/GbvB,MAAQ,CACNpB,SAAU,GACV4C,OAAQ,I,EAmBVC,WAAa,SAAC9D,EAAMC,GAAY,IACtBgB,EAAa,EAAKoB,MAAlBpB,SAEF8C,EAAa,CACjBtC,GAAIe,IAAQC,WACZzC,OACAC,UAGF,MAA+B,KAA3B8D,EAAW/D,KAAKgE,QAA8C,KAA7BD,EAAW9D,OAAO+D,OAC9CN,EAAMO,MAAM,4BAGlBF,EAAW9D,OAAOiE,MAAM,8CAKH,EAAKC,oBAAoBlD,EAAU8C,EAAW/D,MAE1C0D,EAAMO,MAAM,gCAExC,EAAKnB,UACH,SAAAsB,GAAS,MAAK,CACZnD,SAAS,GAAD,mBAAMmD,EAAUnD,UAAhB,CAA0B8C,QAEpC,kBAAML,EAAMW,QAAQ,oBAGfN,GAdEL,EAAMO,MAAM,wB,EAiBvBK,cAAgB,SAAA7C,GACd,EAAKqB,UACH,SAAAsB,GAAS,MAAK,CACZnD,SAAUmD,EAAUnD,SAAS4C,QAAO,SAAAvC,GAAO,OAAIA,EAAQG,KAAOA,SAEhE,kBAAMiC,EAAMW,QAAQ,uB,EAIxBE,aAAe,SAAA3B,GACb,EAAKE,SAAS,CAAEe,OAAQjB,EAAEC,OAAOd,S,EAGnCyC,eAAiB,SAACvD,EAAUwD,GAC1B,OAAOxD,EAAS4C,QAAO,SAAAvC,GAAO,OAC5BA,EAAQtB,KAAK0E,cAAcC,SAASF,EAAMC,mB,EAI9CP,oBAAsB,SAAClD,EAAUjB,GAAX,OACpBiB,EAAS2D,MAAK,SAAAtD,GAAO,OAAIA,EAAQtB,OAASA,M,mFAnE1C,IAAMiB,ECvBiB,WACzB,IACE,IAAM4D,EAAoBC,aAAaC,QAAQ,YAE/C,OAA6B,OAAtBF,OACHG,EACAC,KAAKC,MAAML,GACf,MAAOM,GACP,MAAM,IAAIC,MAAM,oBAAqBD,IDepBL,GAEb7D,GACFmC,KAAKN,SAAS,CAAE7B,e,yCAIDoE,EAAWjB,GAAY,IAChCnD,EAAamC,KAAKf,MAAlBpB,SAEJmD,EAAUnD,WAAaA,GCrBH,SAAAA,GAC1B,IACE,IAAMqE,EAAiBL,KAAKM,UAAUtE,GACtC6D,aAAaU,QAAQ,WAAYF,GACjC,MAAOH,GACP,MAAM,IAAIC,MAAM,oBAAqBD,IDiBnCL,CAA0B7D,K,+BA0DpB,IAAD,EACsBmC,KAAKf,MAA1BpB,EADD,EACCA,SAAU4C,EADX,EACWA,OACZ4B,EAAmBrC,KAAKoB,eAAevD,EAAU4C,GAEvD,OACE,yBAAK1D,UAAWC,IAAOsF,SACrB,wBAAIvF,UAAWC,IAAOuF,SAAtB,aACA,kBAAC,EAAD,CAAa1C,iBAAkBG,KAAKU,aACpC,wBAAI3D,UAAWC,IAAOuF,SAAtB,YACqB,IAApB1E,EAAS2E,QACR,wBAAIzF,UAAWC,IAAOyF,aAAtB,wBAEF,kBAACtE,EAAA,EAAD,CACEuE,GAAI7E,EAAS2E,OAAS,EACtBlE,QAAS,IACTE,WAAYmE,IACZpE,eAAa,GAEb,kBAAC,EAAD,CAAQI,MAAO8B,EAAQ7B,mBAAoBoB,KAAKmB,gBAElD,kBAAChD,EAAA,EAAD,CACEuE,GAAI7E,EAAS2E,OAAS,EACtBlE,QAAS,IACTE,WAAYC,IACZF,eAAa,GAEb,kBAAC,EAAD,CACEV,SAAUwE,EACVvF,oBAAqBkD,KAAKkB,sB,GAxGpBb,a,MEXlBuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCJjDtG,EAAOC,QAAU,CAAC,UAAY,+BAA+B,kBAAkB,UAAU,qBAAqB,0BAA0B,YAAc,iCAAiC,MAAQ,2BAA2B,UAAY,+BAA+B,QAAU,+B,kBCA/QD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,qBAAqB,qBAAqB,QAAU,qBAAqB,QAAU,qBAAqB,YAAc,4B","file":"static/js/main.a982f5c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__8jvnL\",\"enterActive\":\"slide_enterActive__1k4Zi\",\"exit\":\"slide_exit__2MyQ3\",\"exitActive\":\"slide_exitActive__3za7E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../variables.module.css'\",\"color-dark-grey\":\"#3b3b42\",\"primary-box-shadow\":\"1px 1px 5px 1px #D3D3D3\",\"contactWrap\":\"Contact_contactWrap__3mNWW\",\"contactInfo\":\"Contact_contactInfo__3spYB\",\"name\":\"Contact_name__1uO4O\",\"number\":\"Contact_number__kn5yU\",\"deleteBtn\":\"Contact_deleteBtn__gO8rN\",\"row\":\"Contact_row__20PoI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1kE5y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../variables.module.css'\",\"color-dark-grey\":\"#3b3b42\",\"color-light-grey\":\"#8c8c8d\",\"search\":\"Filter_search__28rDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__3rbmG\",\"enterActive\":\"pop_enterActive__3ulkE\",\"exit\":\"pop_exit__v5CFl\",\"exitActive\":\"pop_exitActive__13rDY\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contact.module.css';\n\nconst Contact = ({ name, number, handleDeleteContact }) => (\n  <>\n    <div className={styles.contactWrap}>\n      <div className={styles.contactInfo}>\n        <span className={styles.name}>{name}</span>\n        <span className={styles.number}>{number}</span>\n      </div>\n      <button\n        className={styles.deleteBtn}\n        type=\"button\"\n        onClick={handleDeleteContact}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\">\n          <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n          <path\n            fill=\"#fff\"\n            d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\"\n          />\n        </svg>\n      </button>\n    </div>\n    <div className={styles.row} />\n  </>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handleDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport Contact from '../Contact/Contact';\nimport styles from './ContactList.module.css';\nimport slideTransition from '../../transitions/slide.module.css';\n\nconst ContactList = ({ contacts, handleDeleteContact }) => (\n  <TransitionGroup component=\"ul\" className={styles.contactList}>\n    {contacts.map(contact => (\n      <CSSTransition\n        key={contact.id}\n        timeout={250}\n        unmountOnExit\n        classNames={slideTransition}\n      >\n        <li>\n          <Contact\n            name={contact.name}\n            number={contact.number}\n            handleDeleteContact={() => handleDeleteContact(contact.id)}\n          />\n        </li>\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n  handleDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, handleChangeFilter }) => {\n  return (\n    <input\n      className={styles.search}\n      type=\"text\"\n      value={value}\n      onChange={handleChangeFilter}\n      placeholder=\"Find contact...\"\n    />\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    handleAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  inputIds = {\n    nameId: shortid.generate(),\n    numberId: shortid.generate(),\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { handleAddContact } = this.props;\n    handleAddContact(name, number);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { nameId, numberId } = this.inputIds;\n\n    return (\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n        <input\n          id={nameId}\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name...\"\n          value={name}\n          onChange={this.handleChange}\n        />\n        <input\n          id={numberId}\n          className={styles.input}\n          type=\"text\"\n          name=\"number\"\n          placeholder=\"Enter phone number...\"\n          value={number}\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\" className={styles.submitBtn}>\n          Save contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport shortid from 'shortid';\nimport { Notyf } from 'notyf';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport ContactForm from './ContactForm/ContactForm';\nimport * as localStorage from '../services/localStorage';\nimport styles from './App.module.css';\nimport popTransition from '../transitions/pop.module.css';\nimport slideTransition from '../transitions/slide.module.css';\n\nimport 'notyf/notyf.min.css';\n\nconst notyf = new Notyf();\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getContacts();\n\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.saveContacts(contacts);\n    }\n  }\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (newContact.name.trim() === '' || newContact.number.trim() === '') {\n      return notyf.error('Please fill out the form');\n    }\n    if (\n      !newContact.number.match(/^(\\+38|\\+3)?[\\s-]?(\\(?[\\d]*\\))?[\\d\\s\\- ]*$/)\n    ) {\n      return notyf.error('Wrong number format');\n    }\n\n    const matchingContact = this.findMatchingContact(contacts, newContact.name);\n\n    if (matchingContact) return notyf.error('This contact already exists');\n\n    this.setState(\n      prevState => ({\n        contacts: [...prevState.contacts, newContact],\n      }),\n      () => notyf.success('Contact added'),\n    );\n\n    return newContact;\n  };\n\n  deleteContact = id => {\n    this.setState(\n      prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\n      }),\n      () => notyf.success('Contact deleted'),\n    );\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  filterContacts = (contacts, query) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(query.toLowerCase()),\n    );\n  };\n\n  findMatchingContact = (contacts, name) =>\n    contacts.find(contact => contact.name === name);\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.filterContacts(contacts, filter);\n\n    return (\n      <div className={styles.wrapper}>\n        <h1 className={styles.heading}>Phonebook</h1>\n        <ContactForm handleAddContact={this.addContact} />\n        <h2 className={styles.heading}>Contacts</h2>\n        {contacts.length === 0 && (\n          <h2 className={styles.defaultText}>No contacts saved...</h2>\n        )}\n        <CSSTransition\n          in={contacts.length > 1}\n          timeout={250}\n          classNames={popTransition}\n          unmountOnExit\n        >\n          <Filter value={filter} handleChangeFilter={this.changeFilter} />\n        </CSSTransition>\n        <CSSTransition\n          in={contacts.length > 0}\n          timeout={250}\n          classNames={slideTransition}\n          unmountOnExit\n        >\n          <ContactList\n            contacts={filteredContacts}\n            handleDeleteContact={this.deleteContact}\n          />\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const getContacts = () => {\n  try {\n    const persistedContacts = localStorage.getItem('contacts');\n\n    return persistedContacts === null\n      ? undefined\n      : JSON.parse(persistedContacts);\n  } catch (err) {\n    throw new Error('Get state error: ', err);\n  }\n};\n\nexport const saveContacts = contacts => {\n  try {\n    const contactsToSave = JSON.stringify(contacts);\n    localStorage.setItem('contacts', contactsToSave);\n  } catch (err) {\n    throw new Error('Get state error: ', err);\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../variables.module.css'\",\"color-dark-grey\":\"#3b3b42\",\"primary-box-shadow\":\"1px 1px 5px 1px #D3D3D3\",\"contactForm\":\"ContactForm_contactForm__dNci3\",\"input\":\"ContactForm_input__3ggj_\",\"submitBtn\":\"ContactForm_submitBtn__Xa_-Y\",\"heading\":\"ContactForm_heading__f2rPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../variables.module.css'\",\"primary-font-stack\":\"Roboto, sans-serif\",\"wrapper\":\"App_wrapper__1dmXE\",\"heading\":\"App_heading__1jrS8\",\"defaultText\":\"App_defaultText__2TdHK\"};"],"sourceRoot":""}